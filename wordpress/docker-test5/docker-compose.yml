version: '3'
services:
  db1:
    image: mysql:5.7
    volumes:
      - db1_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis1:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis1_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress1:
    depends_on:
      - db1
      - redis1
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress1_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db1:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis1');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis1
  nginx:
    image: nginx:latest
    restart: always
    depends_on:
      - wordpress1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./htaccess:/var/www/html/.htaccess:ro
    ports:
      - "80:80"

  db2:
    image: mysql:5.7
    volumes:
      - db2_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis2:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis2_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress2:
    depends_on:
      - db2
      - redis2
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress2_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db2:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis2');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis2

  db3:
    image: mysql:5.7
    volumes:
      - db3_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis3:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis3_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress3:
    depends_on:
      - db3
      - redis3
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress3_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db3:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis3');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis3

  db4:
    image: mysql:5.7
    volumes:
      - db4_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis4:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis4_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress4:
    depends_on:
      - db4
      - redis4
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress4_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db4:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis4');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis4

  db5:
    image: mysql:5.7
    volumes:
      - db5_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis5:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis5_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress5:
    depends_on:
      - db5
      - redis5
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress5_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db5:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis5');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis5

  db6:
    image: mysql:5.7
    volumes:
      - db6_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis6:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis6_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress6:
    depends_on:
      - db6
      - redis6
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress6_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db6:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis6');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis6

  db7:
    image: mysql:5.7
    volumes:
      - db7_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis7:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis7_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress7:
    depends_on:
      - db7
      - redis7
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress7_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db7:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis7');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis7

  db8:
    image: mysql:5.7
    volumes:
      - db8_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis8:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis8_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress8:
    depends_on:
      - db8
      - redis8
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress8_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db8:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis8');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis8

  db9:
    image: mysql:5.7
    volumes:
      - db9_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis9:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis9_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress9:
    depends_on:
      - db9
      - redis9
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress9_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db9:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis9');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis9

  db10:
    image: mysql:5.7
    volumes:
      - db10_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_mysql_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: your_wordpress_password
  redis10:
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass your-redis-password-here --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379"
    volumes:
      - redis10_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  wordpress10:
    depends_on:
      - db10
      - redis10
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - wordpress10_content:/var/www/html/wp-content
      - ./htaccess:/var/www/html/.htaccess:ro
    restart: always
    environment:
      WORDPRESS_DB_HOST: db10:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: your_wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        /* Redis configuration */
        define('WP_REDIS_HOST', 'redis10');
        define('WP_REDIS_PORT', '6379');
        define('WP_REDIS_PASSWORD', 'your-redis-password-here');
        define('WP_CACHE_KEY_SALT', 'your-unique-salt-here');
        define('WP_CACHE', true);
      REDIS_HOST: redis10

volumes:
  db1_data:
  wordpress1_content:
  redis1_data:
  db2_data:
  wordpress2_content:
  redis2_data:
  db3_data:
  wordpress3_content:
  redis3_data:
  db4_data:
  wordpress4_content:
  redis4_data:
  db5_data:
  wordpress5_content:
  redis5_data:
  db6_data:
  wordpress6_content:
  redis6_data:
  db7_data:
  wordpress7_content:
  redis7_data:
  db8_data:
  wordpress8_content:
  redis8_data:
  db9_data:
  wordpress9_content:
  redis9_data:
  db10_data:
  wordpress10_content:
  redis10_data:
